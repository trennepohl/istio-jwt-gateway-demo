apiVersion: v1
kind: Secret
metadata:
  name: google-oauth-secrets
data:
  GOOGLE_CLIENT_ID: <replace-me>
  GOOGLE_CLIENT_SECRET: <replace-me>
---
apiVersion: v1
kind: Service
metadata:
  name: authorization
  labels:
    app: authorization
    service: authorization
spec:
  ports:
    - port: 4000
      name: http
  selector:
    app: authorization
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authorization-v1
  labels:
    app: authorization
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authorization
      version: v1
  template:
    metadata:
      labels:
        app: authorization
        version: v1
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: authorization
          image: authorization-service
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: pgsql
            - secretRef:
                name: pgsql
            - secretRef:
                name: google-oauth-secrets
          ports:
            - containerPort: 4000
---
apiVersion: v1
kind: Secret
metadata:
  name: pgsql
data:
  #mysecretpassword
  POSTGRES_PASSWORD: bXlzZWNyZXRwYXNzd29yZAo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgsql
data:
  POSTGRES_USER: istio-poc
  POSTGRES_DB: authorization
  DATABASE_HOST: postgres.default.svc.cluster.local.
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    service: postgres
spec:
  ports:
    - port: 5432
      name: pgsql
  selector:
    app: pgsql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgsql
spec:
  selector:
    matchLabels:
      app: pgsql
  serviceName: pgsql
  replicas: 1
  template:
    metadata:
      labels:
        app: pgsql
    spec:
      containers:
        - name: pgsql
          image: postgres:9.6-buster
          ports:
            - containerPort: 5432
              name: pgsql
          envFrom:
            - configMapRef:
                name: pgsql
            - secretRef:
                name: pgsql

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: authorization-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: authorization
spec:
  hosts:
    - "authorization.com"
  gateways:
    - authorization-gateway
  http:
    - name: "authorization-v1"
      route:
        - destination:
            host: authorization.default.svc.cluster.local
